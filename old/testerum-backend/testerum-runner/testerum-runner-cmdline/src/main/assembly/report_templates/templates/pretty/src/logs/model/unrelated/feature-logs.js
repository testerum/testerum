receiveModel([{"time":"2018-12-27T23:44:33.208","logLevel":"INFO","message":"Started executing feature [unrelated]"},{"time":"2018-12-27T23:44:33.211","logLevel":"INFO","message":"Started executing feature [super hero squad]"},{"time":"2018-12-27T23:44:33.214","logLevel":"INFO","message":"Started executing test [\"Eternal Flame\" is immortal] at [unrelated/super hero squad/_Eternal Flame_ is immortal.test]"},{"time":"2018-12-27T23:44:34.811","logLevel":"INFO","message":"23:44:33.217 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T23:44:34.811","logLevel":"INFO","message":"23:44:34.810 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T23:44:34.811","logLevel":"INFO","message":""},{"time":"2018-12-27T23:44:34.818","logLevel":"INFO","message":"Started executing step [COMPOSED: GIVEN step 1]"},{"time":"2018-12-27T23:44:34.821","logLevel":"INFO","message":"Started executing step [BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock=file:Hero Squad.http.stub.yaml>>]"},{"time":"2018-12-27T23:44:38.567","logLevel":"INFO","message":"23:44:38.231 [main] INFO wiremock.org.eclipse.jetty.util.log - Logging initialized @19927ms"},{"time":"2018-12-27T23:44:38.567","logLevel":"INFO","message":"23:44:38.431 [main] INFO wiremock.org.eclipse.jetty.server.Server - jetty-9.2.z-SNAPSHOT"},{"time":"2018-12-27T23:44:38.567","logLevel":"INFO","message":"23:44:38.465 [main] INFO wiremock.org.eclipse.jetty.server.handler.ContextHandler - Started w.o.e.j.s.ServletContextHandler@1255de25{/__admin,null,AVAILABLE}"},{"time":"2018-12-27T23:44:38.567","logLevel":"INFO","message":"23:44:38.466 [main] INFO wiremock.org.eclipse.jetty.server.handler.ContextHandler - Started w.o.e.j.s.ServletContextHandler@4fc3529{/,null,AVAILABLE}"},{"time":"2018-12-27T23:44:38.567","logLevel":"INFO","message":"23:44:38.491 [main] INFO wiremock.org.eclipse.jetty.server.NetworkTrafficServerConnector - Started NetworkTrafficServerConnector@5d58dc61{HTTP/1.1}{0.0.0.0:12121}"},{"time":"2018-12-27T23:44:38.567","logLevel":"INFO","message":"23:44:38.491 [main] INFO wiremock.org.eclipse.jetty.server.Server - Started @20190ms"},{"time":"2018-12-27T23:44:38.567","logLevel":"INFO","message":""},{"time":"2018-12-27T23:44:38.567","logLevel":"INFO","message":"Finished executing step [BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock=file:Hero Squad.http.stub.yaml>>]; status: [PASSED]"},{"time":"2018-12-27T23:44:38.579","logLevel":"INFO","message":"Started executing step [BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request]"},{"time":"2018-12-27T23:44:38.714","logLevel":"INFO","message":"HTTP Request [\nGET http://localhost:12121/heroes\n\n]"},{"time":"2018-12-27T23:44:39.747","logLevel":"INFO","message":"23:44:39.075 [qtp1266333611-25] INFO / - RequestHandlerClass from context returned com.github.tomakehurst.wiremock.http.StubRequestHandler. Normalized mapped under returned 'null'"},{"time":"2018-12-27T23:44:39.747","logLevel":"INFO","message":""},{"time":"2018-12-27T23:44:39.747","logLevel":"INFO","message":"HTTP Response [\nHTTP/1.1 200\nContent-Type: application/json\nVary: Accept-Encoding, User-Agent\nTransfer-Encoding: chunked\nServer: Jetty(9.2.z-SNAPSHOT)\n\n{\r\n  \"squadName\" : \"Super hero squad\",\r\n  \"homeTown\" : \"Metro City\",\r\n  \"formed\" : 2016,\r\n  \"secretBase\" : \"Super tower\",\r\n  \"active\" : true,\r\n  \"members\" : [ {\r\n    \"name\" : \"Molecule Man\",\r\n    \"age\" : 29,\r\n    \"secretIdentity\" : \"Dan Jukes\",\r\n    \"powers\" : [ \"Radiation resistance\", \"Turning tiny\", \"Radiation blast\" ]\r\n  }, {\r\n    \"name\" : \"Madame Uppercut\",\r\n    \"age\" : 39,\r\n    \"secretIdentity\" : \"Jane Wilson\",\r\n    \"powers\" : [ \"Million tonne punch\", \"Damage resistance\", \"Superhuman reflexes\" ]\r\n  }, {\r\n    \"name\" : \"Eternal Flame\",\r\n    \"age\" : 1000000,\r\n    \"secretIdentity\" : \"Unknown\",\r\n    \"powers\" : [ \"Immortality\", \"Heat Immunity\", \"Inferno\", \"Teleportation\", \"Interdimensional travel\" ]\r\n  } ]\r\n}\n]"},{"time":"2018-12-27T23:44:39.749","logLevel":"INFO","message":"Http Request executed successfully"},{"time":"2018-12-27T23:44:39.749","logLevel":"INFO","message":"Finished executing step [BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request]; status: [PASSED]"},{"time":"2018-12-27T23:44:39.751","logLevel":"INFO","message":"Started executing step [BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response]"},{"time":"2018-12-27T23:44:39.991","logLevel":"INFO","message":"Finished executing step [BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response]; status: [PASSED]"},{"time":"2018-12-27T23:44:39.995","logLevel":"INFO","message":"Started executing step [COMPOSED: GIVEN step 2]"},{"time":"2018-12-27T23:44:39.997","logLevel":"INFO","message":"Started executing step [BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock=file:Hero Squad.http.stub.yaml>>]"},{"time":"2018-12-27T23:44:40.19","logLevel":"INFO","message":"Finished executing step [BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock=file:Hero Squad.http.stub.yaml>>]; status: [PASSED]"},{"time":"2018-12-27T23:44:40.194","logLevel":"INFO","message":"Started executing step [BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request]"},{"time":"2018-12-27T23:44:40.309","logLevel":"INFO","message":"HTTP Request [\nGET http://localhost:12121/heroes\n\n]"},{"time":"2018-12-27T23:44:40.335","logLevel":"INFO","message":"HTTP Response [\nHTTP/1.1 200\nContent-Type: application/json\nVary: Accept-Encoding, User-Agent\nTransfer-Encoding: chunked\nServer: Jetty(9.2.z-SNAPSHOT)\n\n{\r\n  \"squadName\" : \"Super hero squad\",\r\n  \"homeTown\" : \"Metro City\",\r\n  \"formed\" : 2016,\r\n  \"secretBase\" : \"Super tower\",\r\n  \"active\" : true,\r\n  \"members\" : [ {\r\n    \"name\" : \"Molecule Man\",\r\n    \"age\" : 29,\r\n    \"secretIdentity\" : \"Dan Jukes\",\r\n    \"powers\" : [ \"Radiation resistance\", \"Turning tiny\", \"Radiation blast\" ]\r\n  }, {\r\n    \"name\" : \"Madame Uppercut\",\r\n    \"age\" : 39,\r\n    \"secretIdentity\" : \"Jane Wilson\",\r\n    \"powers\" : [ \"Million tonne punch\", \"Damage resistance\", \"Superhuman reflexes\" ]\r\n  }, {\r\n    \"name\" : \"Eternal Flame\",\r\n    \"age\" : 1000000,\r\n    \"secretIdentity\" : \"Unknown\",\r\n    \"powers\" : [ \"Immortality\", \"Heat Immunity\", \"Inferno\", \"Teleportation\", \"Interdimensional travel\" ]\r\n  } ]\r\n}\n]"},{"time":"2018-12-27T23:44:40.336","logLevel":"INFO","message":"Http Request executed successfully"},{"time":"2018-12-27T23:44:40.337","logLevel":"INFO","message":"Finished executing step [BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request]; status: [PASSED]"},{"time":"2018-12-27T23:44:40.341","logLevel":"INFO","message":"Started executing step [BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response]"},{"time":"2018-12-27T23:44:40.452","logLevel":"INFO","message":"Finished executing step [BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response]; status: [PASSED]"},{"time":"2018-12-27T23:44:40.454","logLevel":"INFO","message":"Finished executing step [COMPOSED: GIVEN step 2]; status: [PASSED]"},{"time":"2018-12-27T23:44:40.457","logLevel":"INFO","message":"Finished executing step [COMPOSED: GIVEN step 1]; status: [PASSED]"},{"time":"2018-12-27T23:44:40.46","logLevel":"INFO","message":"23:44:40.458 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T23:44:40.46","logLevel":"INFO","message":"23:44:40.459 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T23:44:40.46","logLevel":"INFO","message":""},{"time":"2018-12-27T23:44:40.46","logLevel":"INFO","message":"Finished executing test [\"Eternal Flame\" is immortal] at [unrelated/super hero squad/_Eternal Flame_ is immortal.test]; status: [PASSED]"},{"time":"2018-12-27T23:44:40.469","logLevel":"INFO","message":"Started executing test [Verify full squad] at [unrelated/super hero squad/Verify full squad.test]"},{"time":"2018-12-27T23:44:40.47","logLevel":"INFO","message":"23:44:40.469 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T23:44:40.47","logLevel":"INFO","message":"23:44:40.470 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T23:44:40.47","logLevel":"INFO","message":""},{"time":"2018-12-27T23:44:40.473","logLevel":"INFO","message":"Started executing step [COMPOSED: GIVEN step 2]"},{"time":"2018-12-27T23:44:40.476","logLevel":"INFO","message":"Started executing step [BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock=file:Hero Squad.http.stub.yaml>>]"},{"time":"2018-12-27T23:44:40.705","logLevel":"INFO","message":"Finished executing step [BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock=file:Hero Squad.http.stub.yaml>>]; status: [PASSED]"},{"time":"2018-12-27T23:44:40.709","logLevel":"INFO","message":"Started executing step [BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request]"},{"time":"2018-12-27T23:44:40.773","logLevel":"INFO","message":"HTTP Request [\nGET http://localhost:12121/heroes\n\n]"},{"time":"2018-12-27T23:44:40.789","logLevel":"INFO","message":"HTTP Response [\nHTTP/1.1 200\nContent-Type: application/json\nVary: Accept-Encoding, User-Agent\nTransfer-Encoding: chunked\nServer: Jetty(9.2.z-SNAPSHOT)\n\n{\r\n  \"squadName\" : \"Super hero squad\",\r\n  \"homeTown\" : \"Metro City\",\r\n  \"formed\" : 2016,\r\n  \"secretBase\" : \"Super tower\",\r\n  \"active\" : true,\r\n  \"members\" : [ {\r\n    \"name\" : \"Molecule Man\",\r\n    \"age\" : 29,\r\n    \"secretIdentity\" : \"Dan Jukes\",\r\n    \"powers\" : [ \"Radiation resistance\", \"Turning tiny\", \"Radiation blast\" ]\r\n  }, {\r\n    \"name\" : \"Madame Uppercut\",\r\n    \"age\" : 39,\r\n    \"secretIdentity\" : \"Jane Wilson\",\r\n    \"powers\" : [ \"Million tonne punch\", \"Damage resistance\", \"Superhuman reflexes\" ]\r\n  }, {\r\n    \"name\" : \"Eternal Flame\",\r\n    \"age\" : 1000000,\r\n    \"secretIdentity\" : \"Unknown\",\r\n    \"powers\" : [ \"Immortality\", \"Heat Immunity\", \"Inferno\", \"Teleportation\", \"Interdimensional travel\" ]\r\n  } ]\r\n}\n]"},{"time":"2018-12-27T23:44:40.789","logLevel":"INFO","message":"Http Request executed successfully"},{"time":"2018-12-27T23:44:40.79","logLevel":"INFO","message":"Finished executing step [BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request]; status: [PASSED]"},{"time":"2018-12-27T23:44:40.793","logLevel":"INFO","message":"Started executing step [BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response]"},{"time":"2018-12-27T23:44:40.884","logLevel":"INFO","message":"Finished executing step [BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response]; status: [PASSED]"},{"time":"2018-12-27T23:44:40.885","logLevel":"INFO","message":"Finished executing step [COMPOSED: GIVEN step 2]; status: [PASSED]"},{"time":"2018-12-27T23:44:40.887","logLevel":"INFO","message":"23:44:40.886 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T23:44:40.887","logLevel":"INFO","message":"23:44:40.887 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T23:44:40.887","logLevel":"INFO","message":""},{"time":"2018-12-27T23:44:40.887","logLevel":"INFO","message":"Finished executing test [Verify full squad] at [unrelated/super hero squad/Verify full squad.test]; status: [PASSED]"},{"time":"2018-12-27T23:44:40.889","logLevel":"INFO","message":"Finished executing feature [super hero squad]; status: [PASSED]"},{"time":"2018-12-27T23:44:40.895","logLevel":"INFO","message":"Started executing test [JS expressions] at [unrelated/JS expressions.test]"},{"time":"2018-12-27T23:44:40.896","logLevel":"INFO","message":"23:44:40.895 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T23:44:40.896","logLevel":"INFO","message":"23:44:40.896 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T23:44:40.896","logLevel":"INFO","message":""},{"time":"2018-12-27T23:44:40.898","logLevel":"INFO","message":"Started executing step [COMPOSED: GIVEN step 3]"},{"time":"2018-12-27T23:44:40.9","logLevel":"INFO","message":"Started executing step [BASIC: GIVEN the variable <<name=today>> with value <<value={{new Date().toISOString().substr(0, 10)...>>]"},{"time":"2018-12-27T23:44:41.019","logLevel":"INFO","message":"Finished executing step [BASIC: GIVEN the variable <<name=today>> with value <<value={{new Date().toISOString().substr(0, 10)...>>]; status: [PASSED]"},{"time":"2018-12-27T23:44:41.025","logLevel":"INFO","message":"Started executing step [BASIC: THEN <<actualValue={{today}}>> is equal to <<expectedValue=2018-11-29>>]"},{"time":"2018-12-27T23:44:41.149","logLevel":"WARNING","message":"Finished executing step [BASIC: THEN <<actualValue={{today}}>> is equal to <<expectedValue=2018-11-29>>]; status: [FAILED]","exceptionDetail":{"exceptionClassName":"java.lang.AssertionError","message":"expected [1979] to be equal to [2018-11-29], but was not","stackTrace":[{"className":"assertions.AssertionsSteps","methodName":"assertEqualValues","fileName":"AssertionsSteps.kt","lineNumber":12,"nativeMethod":false},{"className":"sun.reflect.NativeMethodAccessorImpl","methodName":"invoke0","fileName":"NativeMethodAccessorImpl.java","lineNumber":-2,"nativeMethod":true},{"className":"sun.reflect.NativeMethodAccessorImpl","methodName":"invoke","fileName":"NativeMethodAccessorImpl.java","lineNumber":62,"nativeMethod":false},{"className":"sun.reflect.DelegatingMethodAccessorImpl","methodName":"invoke","fileName":"DelegatingMethodAccessorImpl.java","lineNumber":43,"nativeMethod":false},{"className":"java.lang.reflect.Method","methodName":"invoke","fileName":"Method.java","lineNumber":498,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.step.impl.RunnerBasicStep","methodName":"doRun","fileName":"RunnerBasicStep.kt","lineNumber":53,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.step.RunnerStep","methodName":"run","fileName":"RunnerStep.kt","lineNumber":32,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.step.impl.RunnerComposedStep","methodName":"doRun","fileName":"RunnerComposedStep.kt","lineNumber":40,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.step.RunnerStep","methodName":"run","fileName":"RunnerStep.kt","lineNumber":32,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.test.RunnerTest","methodName":"tryToRun","fileName":"RunnerTest.kt","lineNumber":109,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.test.RunnerTest","methodName":"run","fileName":"RunnerTest.kt","lineNumber":62,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.feature.RunnerFeature","methodName":"tryToRun","fileName":"RunnerFeature.kt","lineNumber":62,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.feature.RunnerFeature","methodName":"run","fileName":"RunnerFeature.kt","lineNumber":47,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.suite.RunnerSuite","methodName":"runTests","fileName":"RunnerSuite.kt","lineNumber":113,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.suite.RunnerSuite","methodName":"run","fileName":"RunnerSuite.kt","lineNumber":67,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.RunnerApplication$tryToExecute$executionStatus$1","methodName":"invoke","fileName":"RunnerApplication.kt","lineNumber":116,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.RunnerApplication$tryToExecute$executionStatus$1","methodName":"invoke","fileName":"RunnerApplication.kt","lineNumber":41,"nativeMethod":false},{"className":"com.testerum.common_kotlin.Classloader_utilsKt","methodName":"runWithThreadContextClassLoader","fileName":"classloader_utils.kt","lineNumber":8,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.RunnerApplication","methodName":"tryToExecute","fileName":"RunnerApplication.kt","lineNumber":115,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.RunnerApplication","methodName":"execute","fileName":"RunnerApplication.kt","lineNumber":60,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.TesterumRunner","methodName":"main","fileName":"TesterumRunner.kt","lineNumber":44,"nativeMethod":false}],"suppressed":[],"asString":"java.lang.AssertionError: expected [1979] to be equal to [2018-11-29], but was not","asDetailedString":"java.lang.AssertionError: expected [1979] to be equal to [2018-11-29], but was not\n\tat assertions.AssertionsSteps.assertEqualValues(AssertionsSteps.kt:12)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.step.impl.RunnerBasicStep.doRun(RunnerBasicStep.kt:53)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.step.RunnerStep.run(RunnerStep.kt:32)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.step.impl.RunnerComposedStep.doRun(RunnerComposedStep.kt:40)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.step.RunnerStep.run(RunnerStep.kt:32)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.test.RunnerTest.tryToRun(RunnerTest.kt:109)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.test.RunnerTest.run(RunnerTest.kt:62)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.feature.RunnerFeature.tryToRun(RunnerFeature.kt:62)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.feature.RunnerFeature.run(RunnerFeature.kt:47)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.suite.RunnerSuite.runTests(RunnerSuite.kt:113)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.suite.RunnerSuite.run(RunnerSuite.kt:67)\n\tat com.testerum.runner_cmdline.RunnerApplication$tryToExecute$executionStatus$1.invoke(RunnerApplication.kt:116)\n\tat com.testerum.runner_cmdline.RunnerApplication$tryToExecute$executionStatus$1.invoke(RunnerApplication.kt:41)\n\tat com.testerum.common_kotlin.Classloader_utilsKt.runWithThreadContextClassLoader(classloader_utils.kt:8)\n\tat com.testerum.runner_cmdline.RunnerApplication.tryToExecute(RunnerApplication.kt:115)\n\tat com.testerum.runner_cmdline.RunnerApplication.execute(RunnerApplication.kt:60)\n\tat com.testerum.runner_cmdline.TesterumRunner.main(TesterumRunner.kt:44)\n"}},{"time":"2018-12-27T23:44:41.174","logLevel":"INFO","message":"Started executing step [BASIC: GIVEN the variable <<name=tenDaysFromToday>> with value <<value={{(function(){var futureDate = new Date(...>>]"},{"time":"2018-12-27T23:44:41.175","logLevel":"INFO","message":"Finished executing step [BASIC: GIVEN the variable <<name=tenDaysFromToday>> with value <<value={{(function(){var futureDate = new Date(...>>]; status: [SKIPPED]"},{"time":"2018-12-27T23:44:41.178","logLevel":"INFO","message":"Started executing step [BASIC: THEN <<actualValue={{tenDaysFromToday}}>> is equal to <<expectedValue=2018-12-09>>]"},{"time":"2018-12-27T23:44:41.179","logLevel":"INFO","message":"Finished executing step [BASIC: THEN <<actualValue={{tenDaysFromToday}}>> is equal to <<expectedValue=2018-12-09>>]; status: [SKIPPED]"},{"time":"2018-12-27T23:44:41.18","logLevel":"INFO","message":"Finished executing step [COMPOSED: GIVEN step 3]; status: [FAILED]"},{"time":"2018-12-27T23:44:41.182","logLevel":"INFO","message":"23:44:41.182 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T23:44:41.182","logLevel":"INFO","message":"23:44:41.182 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T23:44:41.182","logLevel":"INFO","message":""},{"time":"2018-12-27T23:44:41.182","logLevel":"INFO","message":"Finished executing test [JS expressions] at [unrelated/JS expressions.test]; status: [FAILED]"},{"time":"2018-12-27T23:44:41.187","logLevel":"INFO","message":"Started executing test [Mock Get User] at [unrelated/Mock Get User.test]"},{"time":"2018-12-27T23:44:41.189","logLevel":"INFO","message":"23:44:41.188 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T23:44:41.189","logLevel":"INFO","message":"23:44:41.188 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T23:44:41.189","logLevel":"INFO","message":""},{"time":"2018-12-27T23:44:41.192","logLevel":"INFO","message":"Started executing step [BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock={\"expectedRequest\":{\"method\":\"GET\",\"url\"...>>]"},{"time":"2018-12-27T23:44:41.419","logLevel":"INFO","message":"Finished executing step [BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock={\"expectedRequest\":{\"method\":\"GET\",\"url\"...>>]; status: [PASSED]"},{"time":"2018-12-27T23:44:41.422","logLevel":"INFO","message":"Started executing step [BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request]"},{"time":"2018-12-27T23:44:41.482","logLevel":"INFO","message":"HTTP Request [\nGET http://localhost:12121/users/1\n\n]"},{"time":"2018-12-27T23:44:41.495","logLevel":"INFO","message":"HTTP Response [\nHTTP/1.1 200\nContent-Type: application/json\nVary: Accept-Encoding, User-Agent\nTransfer-Encoding: chunked\nServer: Jetty(9.2.z-SNAPSHOT)\n\n{\r\n  \"userName\" : \"Ionut Pruteanu\",\r\n  \"email\" : \"ipruteanu@testerum.com\"\r\n}\n]"},{"time":"2018-12-27T23:44:41.495","logLevel":"INFO","message":"Http Request executed successfully"},{"time":"2018-12-27T23:44:41.496","logLevel":"INFO","message":"Finished executing step [BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request]; status: [PASSED]"},{"time":"2018-12-27T23:44:41.498","logLevel":"INFO","message":"Started executing step [BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response]"},{"time":"2018-12-27T23:44:41.583","logLevel":"INFO","message":"Finished executing step [BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response]; status: [PASSED]"},{"time":"2018-12-27T23:44:41.585","logLevel":"INFO","message":"23:44:41.584 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T23:44:41.585","logLevel":"INFO","message":"23:44:41.585 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T23:44:41.585","logLevel":"INFO","message":""},{"time":"2018-12-27T23:44:41.585","logLevel":"INFO","message":"Finished executing test [Mock Get User] at [unrelated/Mock Get User.test]; status: [PASSED]"},{"time":"2018-12-27T23:44:41.587","logLevel":"INFO","message":"Finished executing feature [unrelated]; status: [FAILED]"},]);