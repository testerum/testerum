receiveModel([{"time":"2018-12-27T23:44:41.187","logLevel":"INFO","message":"Started executing test [Mock Get User] at [unrelated/Mock Get User.test]"},{"time":"2018-12-27T23:44:41.189","logLevel":"INFO","message":"23:44:41.188 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T23:44:41.189","logLevel":"INFO","message":"23:44:41.188 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T23:44:41.189","logLevel":"INFO","message":""},{"time":"2018-12-27T23:44:41.192","logLevel":"INFO","message":"Started executing step [BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock={\"expectedRequest\":{\"method\":\"GET\",\"url\"...>>]"},{"time":"2018-12-27T23:44:41.419","logLevel":"INFO","message":"Finished executing step [BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock={\"expectedRequest\":{\"method\":\"GET\",\"url\"...>>]; status: [PASSED]"},{"time":"2018-12-27T23:44:41.422","logLevel":"INFO","message":"Started executing step [BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request]"},{"time":"2018-12-27T23:44:41.482","logLevel":"INFO","message":"HTTP Request [\nGET http://localhost:12121/users/1\n\n]"},{"time":"2018-12-27T23:44:41.495","logLevel":"INFO","message":"HTTP Response [\nHTTP/1.1 200\nContent-Type: application/json\nVary: Accept-Encoding, User-Agent\nTransfer-Encoding: chunked\nServer: Jetty(9.2.z-SNAPSHOT)\n\n{\r\n  \"userName\" : \"Ionut Pruteanu\",\r\n  \"email\" : \"ipruteanu@testerum.com\"\r\n}\n]"},{"time":"2018-12-27T23:44:41.495","logLevel":"INFO","message":"Http Request executed successfully"},{"time":"2018-12-27T23:44:41.496","logLevel":"INFO","message":"Finished executing step [BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request]; status: [PASSED]"},{"time":"2018-12-27T23:44:41.498","logLevel":"INFO","message":"Started executing step [BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response]"},{"time":"2018-12-27T23:44:41.583","logLevel":"INFO","message":"Finished executing step [BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response]; status: [PASSED]"},{"time":"2018-12-27T23:44:41.585","logLevel":"INFO","message":"23:44:41.584 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T23:44:41.585","logLevel":"INFO","message":"23:44:41.585 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T23:44:41.585","logLevel":"INFO","message":""},{"time":"2018-12-27T23:44:41.585","logLevel":"INFO","message":"Finished executing test [Mock Get User] at [unrelated/Mock Get User.test]; status: [PASSED]"},]);