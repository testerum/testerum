test-def: Numbers expressions

    description = <<
        Here we test the following expression:
        
        *  @isNumber()
        *  @isNumberOrNull()
        *  @isInteger()
        *  @isIntegerOrNull()
        *  @isNumberLessThan()
        *  @isNumberEqualOrLessThan()
        *  @isNumberGreaterThan()
        *  @isNumberEqualOrGraterThan() 
    >>

    scenario: isNumber expression
        param expression = <<@isNumber()>>
        param geo = <<
            {
              "index": 1234,
              "lat": "-43.9509",
              "lng": "-34.4618"
            }
        >>

    scenario: isNumberOrNull expression - Object with a number
        param expression = <<@isNumberOrNull()>>
        param geo = <<
            {
              "index": 1234,
              "lat": "-43.9509",
              "lng": "-34.4618"
            }
        >>

    scenario: isNumberOrNull expression - Object with a null value
        param expression = <<@isNumberOrNull()>>
        param geo = <<
            {
              "index": null,
              "lat": "-43.9509",
              "lng": "-34.4618"
            }
        >>

    scenario: isInteger expression
        param expression = <<@isInteger()>>
        param geo = <<
            {
              "index": 1234,
              "lat": "-43.9509",
              "lng": "-34.4618"
            }
        >>

    scenario: isIntegerOrNull expression - Object with a number
        param expression = <<@isNumberOrNull()>>
        param geo = <<
            {
              "index": 1234,
              "lat": "-43.9509",
              "lng": "-34.4618"
            }
        >>

    scenario: isIntegerOrNull expression - Object with a null value
        param expression = <<@isIntegerOrNull()>>
        param geo = <<
            {
              "index": null,
              "lat": "-43.9509",
              "lng": "-34.4618"
            }
        >>

    scenario: isNumberLessThan expression - Object with a number
        param expression = <<@isNumberLessThan(1235)>>
        param geo = <<
            {
              "index": 1234,
              "lat": "-43.9509",
              "lng": "-34.4618"
            }
        >>

    scenario: isNumberEqualOrLessThan expression - Object with a number - check less than
        param expression = <<@isNumberEqualOrLessThan(1235)>>
        param geo = <<
            {
              "index": 1234,
              "lat": "-43.9509",
              "lng": "-34.4618"
            }
        >>

    scenario: isNumberEqualOrLessThan expression - Object with a number - check equal numbers
        param expression = <<@isNumberEqualOrLessThan(1234)>>
        param geo = <<
            {
              "index": 1234,
              "lat": "-43.9509",
              "lng": "-34.4618"
            }
        >>

    scenario: isNumberGreaterThan expression - Object with a number
        param expression = <<@isNumberGreaterThan(1233)>>
        param geo = <<
            {
              "index": 1234,
              "lat": "-43.9509",
              "lng": "-34.4618"
            }
        >>

    scenario: isNumberEqualOrGreaterThan expression - Object with a number - check greater than
        param expression = <<@isNumberEqualOrGreaterThan(1233)>>
        param geo = <<
            {
              "index": 1234,
              "lat": "-43.9509",
              "lng": "-34.4618"
            }
        >>

    scenario: isNumberEqualOrGreaterThan expression - Object with a number - check equal numbers
        param expression = <<@isNumberEqualOrGreaterThan(1234)>>
        param geo = <<
            {
              "index": 1234,
              "lat": "-43.9509",
              "lng": "-34.4618"
            }
        >>

    step: Given the HTTP mock server <<{{httpMockServer}}>> with the mock request <<{{get_users}}>>
        var httpMockServer = <<
            port: "12101"
            
        >>
        var get_users = <<
            expectedRequest:
              method: GET
              url: /users
            mockResponse:
              statusCode: 200
              headers:
                Content-Type: application/json
              body:
                bodyType: JSON
                content: "{\r\n  \"geo\": {{geo}}\r\n}\r\n"
            
        >>
    step: When I execute the HTTP request <<{{get_users}}>>
        var get_users = <<
            method: GET
            url: http://localhost:12101/users
            followRedirects: false
            headers: {}
            
        >>
    step: Then the HTTP response should be <<{{verify_users_list}}>>
        var verify_users_list = <<
            expectedStatusCode: 200
            expectedBody:
              httpBodyVerifyMatchingType: JSON_VERIFY
              httpBodyType: JSON
              bodyVerify: "{\r\n\t\t  \"geo\" : {\r\n\t\t    \"index\" : \"{{expression}}\",\r\
                \n\t\t    \"lat\" : \"-43.9509\",\r\n\t\t    \"lng\" : \"-34.4618\"\r\n\t\t  }\r\
                \n\t\t}"
            
        >>
